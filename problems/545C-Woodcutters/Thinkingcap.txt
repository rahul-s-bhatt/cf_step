
left-seg = [xi - ht, xi]
right-seg = [xi, xi + ht]

x-cord    ht         left-seg         right-seg      fell
1         2          [-1, 1]          [1, 3]         yes (pick left-seg, because prev space is free)
2         1          [1, 2]           [2, 3]         yes (pick right-seg, because next space is free)
5         10         [-5, 5]          [5, 15]        no (left overlaps 1st, right overlaps next one)
10        9          [1, 10]          [10, 19]       no (left & right overlaps)
19        1          [18, 19]         [19, 20]       yes (right-seg free)


// do not fell, fell left, fell right (for overlap purpose)

so technically we only need to count fell or not right and just maintain previous fell cords

loop through first till last (0-indexed)
// first tree always fell to left
last = x[0]
ans++

// last tree always fell to right
last = x[i] + h[i]
ans++

// for the rest of them 
if(x[i] - h[i] > last) // doesn't overlaps with left
ans++
last = x[i]

else if(x[i] + h[i] < x[i+1]) // doesn't overlaps with right next-one
ans++
last = x[i] + h[i]

else 
last = x[i] // not fell

